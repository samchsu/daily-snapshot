{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport './singlePost.css';\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport PIC from \"../../images/neighborhood.JPEG\";\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const ProfPic = \"http://localhost:5000/imgs/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ProfPic + post.photo,\n        alt: \"Image\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [\" \", new Date(post.createdAt).toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/client/src/components/singlePost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","PIC","useLocation","Link","Context","SinglePost","location","path","pathname","split","post","setPost","ProfPic","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","console","log","photo","Date","createdAt","toDateString","e","target","value"],"mappings":"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","sourcesContent":["import './singlePost.css';\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport PIC from \"../../images/neighborhood.JPEG\";\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\n\nexport default function SinglePost() {\n    const location = useLocation()\n    const path = (location.pathname.split(\"/\")[2])\n    const [post, setPost] = useState({})\n    const ProfPic = \"http://localhost:5000/imgs/\"\n    const { user } = useContext(Context)\n    const [title, setTitle] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n    const [updateMode, setUpdateMode] = useState(false)\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data)\n            setTitle(res.data.title)\n            setDesc(res.data.desc)\n        }\n        getPost()\n    }, [path])\n\n    const handleDelete = async () =>\n    {\n        try {\n            await axios.delete(`/posts/${post._id}`, {\n                data: {username: user.username}})\n            window.location.replace(\"/\")\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    return (\n        <div className='singlePost'>\n            <div className=\"singlePostWrapper\"> \n                {post.photo && <img src={ProfPic + post.photo} alt=\"Image\" className=\"singlePostImg\" />}{\n                    updateMode ? (<input type=\"text\" value={post.title} className=\"singlePostTitleInput\" autoFocus={true}/> ) : (\n                        <h1 className=\"singlePostTitle\">\n                            {title}\n                            {post.username === user?.username && (\n                                <div className=\"singlePostEdit\">\n                                    <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={()=>setUpdateMode(true)}></i>\n                                    <i className=\"singlePostIcon fa-solid fa-trash-can\" onClick = {handleDelete}></i>\n                                </div>\n                            )}\n                        </h1>\n                    )\n                }\n    \n                <div className=\"singlePostInfo\">\n                    <span className='singlePostAuthor'>Author:\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b> {post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlePostDate\"> {new Date(post.createdAt).toDateString()}</span>\n                </div>\n                {updateMode ? (\n                    <textarea className=\"singlePostDescInput\" value = {desc} onChange={(e) => setDesc(e.target.value)}/>\n                ) : (\n                    <p className='singlePostDesc'>\n                        {post.desc}\n                    </p>\n                )}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}