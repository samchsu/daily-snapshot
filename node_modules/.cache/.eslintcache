[{"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/index.js":"1","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/App.js":"2","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/context/Context.js":"3","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/context/Reducer.js":"4","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/home/Home.jsx":"5","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/single/Single.jsx":"6","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/settings/Settings.jsx":"7","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/write/Write.jsx":"8","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/login/Login.jsx":"9","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/navbar/NavBar.jsx":"10","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/register/Register.jsx":"11","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/singlePost/SinglePost.jsx":"12","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/header/Header.jsx":"13","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/posts/Posts.jsx":"14","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/sidebar/Sidebar.jsx":"15","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/post/Post.jsx":"16","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/about/About.jsx":"17"},{"size":295,"mtime":1646867561244,"results":"18","hashOfConfig":"19"},{"size":1199,"mtime":1647116664054,"results":"20","hashOfConfig":"19"},{"size":696,"mtime":1646956368727,"results":"21","hashOfConfig":"19"},{"size":1336,"mtime":1646982556271,"results":"22","hashOfConfig":"19"},{"size":709,"mtime":1646983805960,"results":"23","hashOfConfig":"19"},{"size":205,"mtime":1646983844467,"results":"24","hashOfConfig":"19"},{"size":3202,"mtime":1646983826993,"results":"25","hashOfConfig":"19"},{"size":2224,"mtime":1647119171446,"results":"26","hashOfConfig":"19"},{"size":1436,"mtime":1646956483224,"results":"27","hashOfConfig":"19"},{"size":2109,"mtime":1647119152895,"results":"28","hashOfConfig":"19"},{"size":1694,"mtime":1646865318507,"results":"29","hashOfConfig":"19"},{"size":3394,"mtime":1647119139161,"results":"30","hashOfConfig":"19"},{"size":414,"mtime":1647118815458,"results":"31","hashOfConfig":"19"},{"size":237,"mtime":1646801837454,"results":"32","hashOfConfig":"19"},{"size":669,"mtime":1647118599030,"results":"33","hashOfConfig":"19"},{"size":929,"mtime":1646975331081,"results":"34","hashOfConfig":"19"},{"size":190,"mtime":1647116631637,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1kihtli",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/index.js",[],[],["94","95"],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/App.js",["96","97"],[],"import NavBar from \"./components/navbar/NavBar\";\nimport Home from \"./pages/home/Home\"\nimport Single from \"./pages/single/Single\";\nimport Write from \"./pages/write/Write\";\nimport Settings from \"./pages/settings/Settings\"\nimport Login from \"./pages/login/Login\";\nimport Register from \"./pages/register/Register\";\nimport About from \"./pages/about/About\";\nimport { useContext } from \"react\";\nimport { Context } from \"./context/Context\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Routes,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const {user} = useContext(Context);\n  return (\n    <Router>\n      <NavBar/>\n      <Routes>\n          <Route exact path=\"/\" element={<Home/>}></Route>\n        <Route path=\"/register\" element={user ? <Home/> : <Register/>}></Route>\n        <Route path=\"/login\" element={user ? <Home/> : <Login/>}></Route>\n        <Route path=\"/write\" element={user ? <Write/> : <Register/>}></Route>\n        <Route path=\"/settings\" element={user ? <Settings/> : <Register/>}></Route>\n        <Route path=\"/post/:postId\" element={<Single/>}></Route>\n        <Route path=\"/about\" element={<About/>}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/context/Context.js",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/context/Reducer.js",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/home/Home.jsx",["98"],[],"import './home.css';\nimport { useState, useEffect } from \"react\";\nimport Header from '../../components/header/Header';\nimport Posts from '../../components/posts/Posts';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport axios from \"axios\";\nimport { useLocation } from 'react-router';\n\nexport default function Home() {\n  const [posts, setPosts] = useState([]);\n  const {search} = useLocation();\n  useEffect(() => {\n    \n    const fetchPosts = async () => {\n      const res = await axios.get(\"/posts\" + search)\n      setPosts(res.data)\n    }\n    fetchPosts()\n  }, [search])\n  return (\n    <>\n      <Header />\n      <div className='home'>\n        <Posts posts = {posts} />\n      </div>\n    </>\n  )\n}\n","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/single/Single.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/settings/Settings.jsx",["99","100"],[],"import Sidebar from '../../components/sidebar/Sidebar'\nimport './settings.css'\nimport PIC from '../../images/cloudy.JPEG'\nimport { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { Context } from '../../context/Context'\n\nexport default function Settings() {\n    const { user, dispatch } = useContext(Context)\n    const [file, setFile] = useState(null)\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n    const PF = \"http://localhost:5000/imgs/\"\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        dispatch({type:\"START_UPDATE\"})\n        const updatedUser = {\n            userId: user._id,\n            username,\n            email,\n            password,\n        }\n        if (file) {\n            const data = new FormData();\n            const filename = Date.now() + file.name;\n            data.append(\"name\", filename)\n            data.append(\"file\", file)\n            updatedUser.profilePic = filename\n            try {\n                await axios.post(\"/upload\", data)\n            } catch (err) {\n                \n            }\n        }\n        try {\n            const res = await axios.put(\"/users/\"+user._id, updatedUser);\n            setSuccess(true)\n            dispatch({type:\"SUCCESS_UPDATE\", payload: res.data})\n        } catch (err) {\n            dispatch({type:\"FAILURE_UPDATE\"})\n        }\n    }\n  return (\n    <div className=\"settings\">\n        <div className='settingsWrapper'>\n            <div className=\"settingsTitle\">\n                <span className=\"settingsUpdateTitle\">\n                    Update Account    \n                </span>    \n                <span className=\"settingsDeleteTitle\">\n                    Delete Account    \n                </span>    \n            </div>\n            <form className=\"settingsForm\" onSubmit= {handleSubmit}>\n                <label >Profile Picture</label>\n                <div className=\"settingsProfPic\">\n                    <img src={file ? URL.createObjectURL(file) : PF + user.profilePic}  alt=\"\" />\n                    <label htmlFor=\"fileInput\">\n                    <i className=\"settingsProfPicIcon fa-solid fa-arrow-up-from-bracket\"></i>\n                    </label>\n                    <input type=\"file\" id=\"fileInput\" style={{display:\"none\"}} onChange = {(e) => setFile(e.target.files[0])}/>\n                </div>\n                <label>Username</label>\n                <input type=\"text\" placeholder={user.username} onChange={e => setUsername(e.target.value)} />\n                <label>Email</label>\n                <input type=\"email\" placeholder={user.email} onChange={e => setEmail(e.target.value)}/>\n                <label>Password</label>\n                <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                <button className=\"settingsSubmit\" type=\"submit\">Update</button>\n                {success && (\n                    <span style={{ color: \"green\", textAlign: \"center\", marginTop: \"20px\" }}>Profile updated successfully.</span>\n                )}\n            </form>\n        </div> \n    </div>\n  )\n}\n","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/write/Write.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/login/Login.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/navbar/NavBar.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/register/Register.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/singlePost/SinglePost.jsx",["101"],[],"import './singlePost.css';\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\n\nexport default function SinglePost() {\n    const location = useLocation()\n    const path = (location.pathname.split(\"/\")[2])\n    const [post, setPost] = useState({})\n    const ProfPic = \"http://localhost:5000/imgs/\"\n    const { user } = useContext(Context)\n    const [title, setTitle] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n    const [updateMode, setUpdateMode] = useState(false)\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data)\n            setTitle(res.data.title)\n            setDesc(res.data.desc)\n        }\n        getPost()\n    }, [path])\n\n    const handleDelete = async () =>\n    {\n        try {\n            await axios.delete(`/posts/${post._id}`, {\n                data: {username: user.username}})\n            window.location.replace(\"/\")\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    \n    const handleUpdate = async () => {\n        try {\n            await axios.put(`/posts/${post._id}`, {\n                username: user.username, title, desc})\n            setUpdateMode(false)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    return (\n        <div className='singlePost'>\n            <div className=\"singlePostWrapper\"> \n                {post.photo && <img src={ProfPic + post.photo} alt=\"Image\" className=\"singlePostImg\" />}{\n                    updateMode ? (\n                        <input type=\"text\" value={title} className=\"singlePostTitleInput\" autoFocus={true}\n                        onChange={(e) => setTitle(e.target.value)}\n                        /> ) : (\n                        <h1 className=\"singlePostTitle\">\n                            {title}\n                            {post.username === user?.username && (\n                                <div className=\"singlePostEdit\">\n                                    <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={()=>setUpdateMode(true)}></i>\n                                    <i className=\"singlePostIcon fa-solid fa-trash-can\" onClick = {handleDelete}></i>\n                                </div>\n                            )}\n                        </h1>\n                    )\n                }\n    \n                <div className=\"singlePostInfo\">\n                    <span className='singlePostAuthor'>Author:\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b> {post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlePostDate\"> {new Date(post.createdAt).toDateString()}</span>\n                </div>\n                {updateMode ? (\n                    <textarea className=\"singlePostDescInput\" value = {desc} onChange={(e) => setDesc(e.target.value)}/>\n                ) : (\n                    <p className='singlePostDesc'>\n                        {desc}\n                    </p>\n                )}\n                {updateMode && <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>}\n            </div>\n        </div>\n    )\n}\n","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/header/Header.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/posts/Posts.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/sidebar/Sidebar.jsx",["102","103","104"],[],"import \"./sidebar.css\"\nimport PIC from \"../../images/me.jpg\"\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar() {\n  \n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarItem\">\n        <img className=\"sidebarImg\" src={PIC} alt=\"\" />\n        <p>Developer</p>\n      </div>\n      <div className=\"sidebarItem\">\n        <div className=\"sidebarSocial\">\n          <i className=\"sidebarIcon fa-brands fa-github\"></i>\n          <i className=\"sidebarIcon fa-brands fa-linkedin\"></i>\n          <i className=\"sidebarIcon fa-brands fa-instagram\"></i>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/components/post/Post.jsx",[],[],"/Users/samuelhsu/Documents/GitHub/daily-snapshot/daily-snapshot/src/pages/about/About.jsx",["105","106"],[],"import './about.css';\nimport { useState, useEffect } from \"react\";\nimport Sidebar from '../../components/sidebar/Sidebar';\n\nexport default function About() {\n  return (\n    <Sidebar />\n  )\n}",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":14,"column":3,"nodeType":"113","messageId":"114","endLine":14,"endColumn":9},{"ruleId":"111","severity":1,"message":"115","line":17,"column":3,"nodeType":"113","messageId":"114","endLine":17,"endColumn":7},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":15},{"ruleId":"111","severity":1,"message":"116","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":15},{"ruleId":"111","severity":1,"message":"117","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":51,"column":32,"nodeType":"120","endLine":51,"endColumn":104},{"ruleId":"111","severity":1,"message":"121","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},{"ruleId":"111","severity":1,"message":"122","line":3,"column":21,"nodeType":"113","messageId":"114","endLine":3,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"122","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"121","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":29},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Sidebar' is defined but never used.","'PIC' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]